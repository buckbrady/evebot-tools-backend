-- Set comment to schema: "public"
COMMENT ON SCHEMA "public" IS 'Default EVEBot Tools schema';
-- Create "universe_graphics" table
CREATE TABLE "public"."universe_graphics" ("id" integer NOT NULL, "collision_file" text NULL, "graphic_file" text NULL, "icon_folder" text NULL, "sof_dna" text NULL, "sof_fation_name" text NULL, "sof_hull_name" text NULL, "sof_race_name" text NULL);
-- Create "market_group" table
CREATE TABLE "public"."market_group" ("id" integer NOT NULL, "name" text NOT NULL, "description" text NOT NULL, "parent_group_id" integer NULL, PRIMARY KEY ("id"));
-- Create "server_status" table
CREATE TABLE "public"."server_status" ("id" bigserial NOT NULL, "players" integer NOT NULL, "server_version" text NOT NULL, "start_time" timestamptz NOT NULL, "vip" boolean NOT NULL, PRIMARY KEY ("id"));
-- Create "universe_ancestry" table
CREATE TABLE "public"."universe_ancestry" ("id" integer NOT NULL, "name" text NOT NULL, "bloodline_id" integer NOT NULL, "description" text NOT NULL, "icon_id" integer NULL, "short_description" text NULL, PRIMARY KEY ("id"));
-- Create "universe_race" table
CREATE TABLE "public"."universe_race" ("id" integer NOT NULL, "alliance_id" integer NOT NULL, "description" text NOT NULL, "name" text NOT NULL, PRIMARY KEY ("id"));
-- Create "universe_bloodlines" table
CREATE TABLE "public"."universe_bloodlines" ("id" integer NOT NULL, "corporation_id" integer NOT NULL, "description" text NOT NULL, "race_id" integer NOT NULL, "ship_type_id" integer NOT NULL, "charisma" integer NOT NULL, "intelligence" integer NOT NULL, "memory" integer NOT NULL, "perception" integer NOT NULL, "willpower" integer NOT NULL, PRIMARY KEY ("id"));
-- Create "alliance" table
CREATE TABLE "public"."alliance" ("id" integer NOT NULL, "creator_corporation_id" integer NOT NULL, "creator_id" integer NOT NULL, "date_founded" timestamptz NOT NULL, "executor_corporation_id" integer NULL, "faction_id" integer NULL, "name" text NOT NULL, "ticker" text NOT NULL, PRIMARY KEY ("id"));
-- Create "alliance_icon" table
CREATE TABLE "public"."alliance_icon" ("id" integer NOT NULL, "px128x128" text NOT NULL, "px64x64" text NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "alliance_id" FOREIGN KEY ("id") REFERENCES "public"."alliance" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "character" table
CREATE TABLE "public"."character" ("id" integer NOT NULL, "alliance_id" integer NULL, "birthday" timestamptz NOT NULL, "bloodline_id" integer NOT NULL, "corporation_id" integer NOT NULL, "description" text NULL, "faction_id" integer NULL, "gender" text NOT NULL, "name" text NOT NULL, "race_id" integer NOT NULL, "security_status" double precision NULL, "title" text NULL, PRIMARY KEY ("id"));
-- Create "character_corporation_history" table
CREATE TABLE "public"."character_corporation_history" ("id" integer NOT NULL, "corporation_id" integer NOT NULL, "is_deleted" boolean NOT NULL DEFAULT false, "record_id" integer NOT NULL, "start_date" timestamptz NOT NULL, PRIMARY KEY ("id", "record_id"), CONSTRAINT "character_id" FOREIGN KEY ("id") REFERENCES "public"."character" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "character_portrait" table
CREATE TABLE "public"."character_portrait" ("id" integer NOT NULL, "px128x128" text NOT NULL, "px256x256" text NOT NULL, "px512x512" text NOT NULL, "px64x64" text NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "character_id" FOREIGN KEY ("id") REFERENCES "public"."character" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "corporation" table
CREATE TABLE "public"."corporation" ("id" integer NOT NULL, "alliance_id" integer NULL, "ceo_id" integer NOT NULL, "creator_id" integer NOT NULL, "date_founded" timestamptz NOT NULL, "description" text NOT NULL, "faction_id" integer NULL, "home_station_id" integer NULL, "member_count" integer NOT NULL, "name" text NOT NULL, "shares" integer NOT NULL, "tax_rate" double precision NOT NULL, "ticker" text NOT NULL, "url" text NULL, "war_eligible" boolean NOT NULL DEFAULT false, PRIMARY KEY ("id"));
-- Create "contract" table
CREATE TABLE "public"."contract" ("id" bigint NOT NULL, "buyout" numeric NULL, "collateral" numeric NULL, "date_completed" timestamptz NULL, "date_expired" timestamptz NOT NULL, "date_issued" timestamptz NOT NULL, "days_to_complete" integer NULL, "end_location_id" bigint NULL, "for_corporation" boolean NOT NULL DEFAULT false, "issuer_corporation_id" integer NOT NULL, "issuer_id" integer NOT NULL, "price" numeric NULL, "reward" numeric NULL, "start_location_id" bigint NULL, "status" text NOT NULL, "title" text NULL, "type" text NOT NULL, "volume" numeric NULL, PRIMARY KEY ("id"), CONSTRAINT "issuer_corporation_id" FOREIGN KEY ("issuer_corporation_id") REFERENCES "public"."corporation" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "issuer_id" FOREIGN KEY ("issuer_id") REFERENCES "public"."character" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "contract_bid" table
CREATE TABLE "public"."contract_bid" ("id" bigint NOT NULL, "amount" numeric NOT NULL, "bid_id" integer NOT NULL, "date_bid" timestamptz NOT NULL, PRIMARY KEY ("id", "bid_id"), CONSTRAINT "contract_id" FOREIGN KEY ("id") REFERENCES "public"."contract" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_type" table
CREATE TABLE "public"."universe_type" ("id" integer NOT NULL, "name" text NOT NULL, "description" text NOT NULL, "capacity" double precision NOT NULL, "graphic_id" integer NULL, "group_id" integer NOT NULL, "icon_id" integer NULL, "market_group_id" integer NULL, "mass" double precision NOT NULL, "packaged_volume" double precision NOT NULL, "portion_size" integer NOT NULL, "published" boolean NOT NULL, "radius" double precision NOT NULL, "volume" double precision NOT NULL, PRIMARY KEY ("id"));
-- Create "contract_item" table
CREATE TABLE "public"."contract_item" ("id" integer NOT NULL, "is_included" boolean NOT NULL, "is_blueprint_copy" boolean NULL, "item_id" bigint NOT NULL, "material_efficiency" integer NULL, "quantity" integer NOT NULL, "record_id" integer NOT NULL, "runs" integer NULL, "time_efficiency" integer NULL, PRIMARY KEY ("id", "record_id"), CONSTRAINT "contract_id" FOREIGN KEY ("id") REFERENCES "public"."contract" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "item_id" FOREIGN KEY ("item_id") REFERENCES "public"."universe_type" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "corporation_alliance_history" table
CREATE TABLE "public"."corporation_alliance_history" ("id" integer NOT NULL, "alliance_id" integer NOT NULL, "is_deleted" boolean NOT NULL DEFAULT false, "record_id" integer NOT NULL, "start_date" timestamptz NOT NULL, PRIMARY KEY ("id", "record_id"), CONSTRAINT "corporation_id" FOREIGN KEY ("id") REFERENCES "public"."corporation" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "corporation_icon" table
CREATE TABLE "public"."corporation_icon" ("id" integer NOT NULL, "px128x128" text NULL, "px256x256" text NULL, "px64x64" text NULL, PRIMARY KEY ("id"), CONSTRAINT "corporation_id" FOREIGN KEY ("id") REFERENCES "public"."corporation" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "killmail" table
CREATE TABLE "public"."killmail" ("id" bigint NOT NULL, "killmail_time" timestamptz NOT NULL, "solar_system_id" integer NOT NULL, "war_id" bigint NULL, "damage_taken" integer NOT NULL, "total_value" double precision NOT NULL, PRIMARY KEY ("id"));
-- Create "killmail_attacker" table
CREATE TABLE "public"."killmail_attacker" ("id" bigserial NOT NULL, "killmail_id" bigint NOT NULL, "character_id" integer NULL, "corporation_id" integer NULL, "alliance_id" integer NULL, "faction_id" integer NULL, "damage_done" integer NOT NULL, "final_blow" boolean NOT NULL, "security_status" double precision NOT NULL, "weapon_type_id" integer NULL, "ship_type_id" integer NULL, PRIMARY KEY ("id"), CONSTRAINT "killmail_id" FOREIGN KEY ("killmail_id") REFERENCES "public"."killmail" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "killmail_item" table
CREATE TABLE "public"."killmail_item" ("id" bigserial NOT NULL, "killmail_id" bigint NOT NULL, "type_id" integer NOT NULL, "flag" integer NOT NULL, "quantity_destroyed" integer NULL, "quantity_dropped" integer NULL, "singleton" boolean NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "killmail_id" FOREIGN KEY ("killmail_id") REFERENCES "public"."killmail" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "killmail_stats" table
CREATE TABLE "public"."killmail_stats" ("id" bigint NOT NULL, "location_id" integer NOT NULL, "hash" text NOT NULL, "fitted_value" double precision NOT NULL, "destroyed_value" double precision NOT NULL, "dropped_value" double precision NOT NULL, "href" text NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "killmail_id" FOREIGN KEY ("id") REFERENCES "public"."killmail" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "killmail_victim" table
CREATE TABLE "public"."killmail_victim" ("id" bigint NOT NULL, "character_id" integer NOT NULL, "corporation_id" integer NOT NULL, "alliance_id" integer NULL, "faction_id" integer NULL, PRIMARY KEY ("id"), CONSTRAINT "killmail_id" FOREIGN KEY ("id") REFERENCES "public"."killmail" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_region" table
CREATE TABLE "public"."universe_region" ("id" integer NOT NULL, "name" text NOT NULL, "description" text NULL, PRIMARY KEY ("id"));
-- Create "market_history" table
CREATE TABLE "public"."market_history" ("type_id" integer NOT NULL, "region_id" integer NOT NULL, "date" date NOT NULL, "average" double precision NOT NULL, "highest" double precision NOT NULL, "lowest" double precision NOT NULL, "order_count" integer NOT NULL, "volume" bigint NOT NULL, PRIMARY KEY ("type_id", "region_id", "date"), CONSTRAINT "region_id" FOREIGN KEY ("region_id") REFERENCES "public"."universe_region" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "type_id" FOREIGN KEY ("type_id") REFERENCES "public"."universe_type" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_constellation" table
CREATE TABLE "public"."universe_constellation" ("id" integer NOT NULL, "name" text NOT NULL, "region_id" integer NOT NULL, "position_x" double precision NOT NULL, "position_y" double precision NOT NULL, "position_z" double precision NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "region_id" FOREIGN KEY ("region_id") REFERENCES "public"."universe_region" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_system" table
CREATE TABLE "public"."universe_system" ("id" integer NOT NULL, "name" text NOT NULL, "security_class" text NOT NULL, "security_status" double precision NULL, "constellation_id" integer NULL, "star_id" integer NULL, "position_x" double precision NULL, "position_y" double precision NULL, "position_z" double precision NULL, PRIMARY KEY ("id"), CONSTRAINT "constellation_id" FOREIGN KEY ("constellation_id") REFERENCES "public"."universe_constellation" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "market_orders" table
CREATE TABLE "public"."market_orders" ("id" bigint NOT NULL, "type_id" integer NOT NULL, "region_id" integer NOT NULL, "location_id" bigint NOT NULL, "range" text NOT NULL, "is_buy_order" boolean NOT NULL, "price" numeric NOT NULL, "volume_total" integer NOT NULL, "volume_remain" integer NOT NULL, "issued" timestamptz NOT NULL, "duration" integer NOT NULL, "min_volume" integer NOT NULL, "system_id" integer NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "region_id" FOREIGN KEY ("region_id") REFERENCES "public"."universe_region" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "system_id" FOREIGN KEY ("system_id") REFERENCES "public"."universe_system" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "type_id" FOREIGN KEY ("type_id") REFERENCES "public"."universe_type" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "market_price" table
CREATE TABLE "public"."market_price" ("type_id" integer NOT NULL, "average_price" numeric NULL, "adjusted_price" numeric NULL, "timestamp" timestamptz NOT NULL DEFAULT '2023-12-24 08:05:55.358023+00', PRIMARY KEY ("type_id", "timestamp"), CONSTRAINT "type_id" FOREIGN KEY ("type_id") REFERENCES "public"."universe_type" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_astroid_belt" table
CREATE TABLE "public"."universe_astroid_belt" ("id" integer NOT NULL, "system_id" integer NOT NULL, "position_x" double precision NOT NULL, "position_y" double precision NOT NULL, "position_z" double precision NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "system_id" FOREIGN KEY ("system_id") REFERENCES "public"."universe_system" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_faction" table
CREATE TABLE "public"."universe_faction" ("id" integer NOT NULL, "corporation_id" integer NULL, "description" text NOT NULL, "is_unique" boolean NOT NULL, "militia_corporation_id" integer NULL, "name" text NOT NULL, "size_factor" double precision NOT NULL, "solar_system_id" integer NULL, "station_count" integer NOT NULL, "station_system_count" integer NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "solar_system_id" FOREIGN KEY ("solar_system_id") REFERENCES "public"."universe_system" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_category" table
CREATE TABLE "public"."universe_category" ("id" integer NOT NULL, "name" text NOT NULL, "published" boolean NOT NULL, PRIMARY KEY ("id"));
-- Create "universe_group" table
CREATE TABLE "public"."universe_group" ("id" integer NOT NULL, "category_id" integer NOT NULL, "name" text NOT NULL, "published" boolean NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "category_id" FOREIGN KEY ("category_id") REFERENCES "public"."universe_category" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_moon" table
CREATE TABLE "public"."universe_moon" ("id" integer NOT NULL, "system_id" integer NOT NULL, "name" text NOT NULL, "position_x" double precision NOT NULL, "position_y" double precision NOT NULL, "position_z" double precision NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "system" FOREIGN KEY ("system_id") REFERENCES "public"."universe_system" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_planet" table
CREATE TABLE "public"."universe_planet" ("id" integer NOT NULL, "system_id" integer NOT NULL, "name" text NOT NULL, "position_x" double precision NOT NULL, "position_y" double precision NOT NULL, "position_z" double precision NOT NULL, "type_id" integer NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "system_id" FOREIGN KEY ("system_id") REFERENCES "public"."universe_system" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "type_id" FOREIGN KEY ("type_id") REFERENCES "public"."universe_type" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_star" table
CREATE TABLE "public"."universe_star" ("id" integer NOT NULL, "name" text NOT NULL, "age" bigint NOT NULL, "luminosity" double precision NOT NULL, "radius" bigint NOT NULL, "solar_system_id" integer NOT NULL, "spectral_class" text NOT NULL, "temperature" integer NOT NULL, "type_id" integer NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "solar_system_id" FOREIGN KEY ("solar_system_id") REFERENCES "public"."universe_system" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "type_id" FOREIGN KEY ("type_id") REFERENCES "public"."universe_type" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_stargate" table
CREATE TABLE "public"."universe_stargate" ("id" integer NOT NULL, "name" text NOT NULL, "destination_stargate_id" integer NOT NULL, "destination_system_id" integer NOT NULL, "position_x" double precision NOT NULL, "position_y" double precision NOT NULL, "position_z" double precision NOT NULL, "type_id" integer NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "destination_system_id" FOREIGN KEY ("destination_system_id") REFERENCES "public"."universe_system" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "type_id" FOREIGN KEY ("type_id") REFERENCES "public"."universe_type" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_station" table
CREATE TABLE "public"."universe_station" ("id" integer NOT NULL, "name" text NOT NULL, "owner" integer NULL, "max_dockable_ship_volume" double precision NOT NULL, "office_rental_cost" double precision NOT NULL, "position_x" double precision NOT NULL, "position_y" double precision NOT NULL, "position_z" double precision NOT NULL, "race_id" integer NULL, "reprocessing_efficiency" double precision NOT NULL, "reprocessing_stations_take" double precision NOT NULL, "system_id" integer NOT NULL, "type_id" integer NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "system_id" FOREIGN KEY ("system_id") REFERENCES "public"."universe_system" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "type_id" FOREIGN KEY ("type_id") REFERENCES "public"."universe_type" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_station_service" table
CREATE TABLE "public"."universe_station_service" ("station_id" integer NOT NULL, "service" text NOT NULL, PRIMARY KEY ("station_id", "service"), CONSTRAINT "station_id" FOREIGN KEY ("station_id") REFERENCES "public"."universe_station" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_structure" table
CREATE TABLE "public"."universe_structure" ("id" bigint NOT NULL, "name" text NOT NULL, "owner_id" integer NOT NULL, "position_x" double precision NOT NULL, "position_y" double precision NOT NULL, "position_z" double precision NOT NULL, "solar_system_id" integer NOT NULL, "type_id" integer NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "solar_system_id" FOREIGN KEY ("solar_system_id") REFERENCES "public"."universe_system" ("id") ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT "type_id" FOREIGN KEY ("type_id") REFERENCES "public"."universe_type" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_system_jump" table
CREATE TABLE "public"."universe_system_jump" ("system_id" integer NOT NULL, "timestamp" timestamptz NOT NULL DEFAULT '2023-12-24 08:05:55.545153+00', "ship_jumps" integer NOT NULL, PRIMARY KEY ("system_id", "timestamp"), CONSTRAINT "system_id" FOREIGN KEY ("system_id") REFERENCES "public"."universe_system" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_system_kill" table
CREATE TABLE "public"."universe_system_kill" ("system_id" integer NOT NULL, "timestamp" timestamptz NOT NULL DEFAULT '2023-12-24 08:05:55.555093+00', "ship_kills" integer NOT NULL, "pod_kills" integer NOT NULL, "npc_kills" integer NOT NULL, PRIMARY KEY ("system_id", "timestamp"), CONSTRAINT "system_id" FOREIGN KEY ("system_id") REFERENCES "public"."universe_system" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_type_dogma_attribute" table
CREATE TABLE "public"."universe_type_dogma_attribute" ("type_id" integer NOT NULL, "attribute_id" integer NOT NULL, "value" double precision NOT NULL, PRIMARY KEY ("type_id", "attribute_id"), CONSTRAINT "type_id" FOREIGN KEY ("type_id") REFERENCES "public"."universe_type" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "universe_type_dogma_effect" table
CREATE TABLE "public"."universe_type_dogma_effect" ("type_id" integer NOT NULL, "effect_id" integer NOT NULL, "is_default" boolean NOT NULL, PRIMARY KEY ("type_id", "effect_id"), CONSTRAINT "type_id" FOREIGN KEY ("type_id") REFERENCES "public"."universe_type" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
