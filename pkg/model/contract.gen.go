// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameContract = "contract"

// Contract mapped from table <contract>
type Contract struct {
	ID                  int64      `gorm:"column:id;primaryKey" json:"id"`
	Buyout              *float64   `gorm:"column:buyout" json:"buyout"`
	Collateral          *float64   `gorm:"column:collateral" json:"collateral"`
	DateCompleted       *time.Time `gorm:"column:date_completed" json:"date_completed"`
	DateExpired         time.Time  `gorm:"column:date_expired;not null" json:"date_expired"`
	DateIssued          time.Time  `gorm:"column:date_issued;not null" json:"date_issued"`
	DaysToComplete      *int32     `gorm:"column:days_to_complete" json:"days_to_complete"`
	EndLocationID       *int64     `gorm:"column:end_location_id" json:"end_location_id"`
	ForCorporation      bool       `gorm:"column:for_corporation;not null" json:"for_corporation"`
	IssuerCorporationID int32      `gorm:"column:issuer_corporation_id;not null" json:"issuer_corporation_id"`
	IssuerID            int32      `gorm:"column:issuer_id;not null" json:"issuer_id"`
	Price               *float64   `gorm:"column:price" json:"price"`
	Reward              *float64   `gorm:"column:reward" json:"reward"`
	StartLocationID     *int64     `gorm:"column:start_location_id" json:"start_location_id"`
	Status              string     `gorm:"column:status;not null" json:"status"`
	Title               *string    `gorm:"column:title" json:"title"`
	Type                string     `gorm:"column:type;not null" json:"type"`
	Volume              *float64   `gorm:"column:volume" json:"volume"`
}

// TableName Contract's table name
func (*Contract) TableName() string {
	return TableNameContract
}
